{"version":3,"sources":["webpack:///./src/utils/useLatestData.js","webpack:///./src/styles/Grids.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/components/ItemGrid.js","webpack:///./src/pages/index.js"],"names":["gql","String","raw","deets","HomePageGrid","styled","div","ItemsGrid","ItemStyles","LoadingGrid","count","Array","from","length","_","i","className","src","alt","width","height","ItemGrid","item","map","items","name","image","asset","url","style","background","metadata","lqip","backgroundSize","CurrentlySlicing","slicemasters","HotSlices","hotSlices","HomePage","useState","setHotSlices","setSlicemasters","useEffect","fetch","process","method","headers","body","JSON","stringify","query","then","res","json","data","StoreSettings","console","log","useLatestData"],"mappings":"ixBAEA,IAAMA,EAAMC,OAAOC,IACbC,EAAQH,EAAH,K,gBCDEI,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,4IAUZE,EAAYF,IAAOC,IAAV,uEAAGD,CAAH,0DAOTG,EAAaH,IAAOC,IAAV,wEAAGD,CAAH,ghBChBR,SAASI,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OACE,kBAACH,EAAD,KACGI,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAJ,OAC7B,kBAACP,EAAD,KACE,2BACE,0BAAMQ,UAAU,QAAhB,eAEF,yBACEC,IAAI,0HACJD,UAAU,UACVE,IAAI,UACJC,MAAM,MACNC,OAAO,aCbJ,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,kBAACf,EAAD,KACGe,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAChB,EAAD,KACE,2BACE,0BAAMQ,UAAU,QAAQQ,EAAMC,OAEhC,yBACEN,MAAM,MACNC,OAAO,MACPH,IAAQO,EAAME,MAAMC,MAAMC,IAAvB,wBACHV,IAAKM,EAAMC,KACXI,MAAO,CACLC,WAAW,OAAQN,EAAME,MAAMC,MAAMI,SAASC,KAApC,IACVC,eAAgB,gBCZ9B,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,6BACE,wBAAInB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,oBAEF,mEACEmB,GAAgB,kBAAC1B,EAAD,CAAaC,MAAO,IACrCyB,KAAiBA,aAAD,EAACA,EAActB,SAAU,sDACzCsB,aAAA,EAAAA,EAActB,SAAU,kBAACQ,EAAD,CAAUC,KAAMa,KAK/C,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,6BACE,wBAAIrB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,aAEF,0DAEEqB,GAAa,kBAAC5B,EAAD,CAAaC,MAAO,IAClC2B,KAAcA,aAAD,EAACA,EAAWxB,SAAU,mDACnCwB,aAAA,EAAAA,EAAWxB,SAAW,kBAACQ,EAAD,CAAUC,KAAMe,KAK9B,SAASC,IAAY,IAAD,EJnBpB,WAAyB,MAEJC,qBAA3BF,EAF+B,KAEpBG,EAFoB,OAIED,qBAAjCJ,EAJ+B,KAIjBM,EAJiB,KAkCtC,OA7BAC,qBAAU,WACRC,MAAMC,+DAAqC,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOlD,EAAF,IAKYG,EAGDA,OAOjBgD,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLZ,EAAaY,EAAIE,KAAKC,cAAclB,WACpCI,EAAgBW,EAAIE,KAAKC,cAAcpB,cACvCqB,QAAQC,IAAIL,EAAIE,KAAKC,cAAclB,UAAUZ,WAEhD,IACI,CACLY,YACAF,gBIhBkCuB,GAA5BvB,EADyB,EACzBA,aAAcE,EADW,EACXA,UACtB,OACE,yBAAKrB,UAAU,UACb,wDACA,iEACA,kBAACZ,EAAD,KACE,kBAAC8B,EAAD,CAAkBC,aAAcA,IAChC,kBAACC,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-1456677b6f49bae1a2d5.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst gql = String.raw;\r\nconst deets = gql`\r\n    name\r\n    _id\r\n    image {\r\n      asset {\r\n        url\r\n        metadata {\r\n          lqip\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nexport default function useLatestData() {\r\n  // hot slices\r\n  const [hotSlices, setHotSlices] = useState();\r\n  // slicemasters\r\n  const [slicemasters, setSlicemasters] = useState();\r\n  useEffect(() => {\r\n    fetch(process.env.GATSBY_GRAPHQL_ENDPOINT, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: gql` \r\n                query {\r\n                    StoreSettings (id: \"downtown\") {\r\n                     name\r\n                     slicemasters {\r\n                       ${deets}\r\n                     }\r\n                     hotSlices {\r\n                      ${deets}\r\n                     }\r\n                    }\r\n                   }\r\n                   `,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setHotSlices(res.data.StoreSettings.hotSlices);\r\n        setSlicemasters(res.data.StoreSettings.slicemasters);\r\n        console.log(res.data.StoreSettings.hotSlices.name);\r\n      });\r\n  }, []);\r\n  return {\r\n    hotSlices,\r\n    slicemasters,\r\n  };\r\n}\r\n","import styled from 'styled-components';\n\nexport const HomePageGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  --columns: 2;\n  grid-template-columns: repeat(var(--columns), minmax(auto, 1fr));\n  @media (max-width: 800px) {\n    --columns: 1;\n  }\n`;\n\nexport const ItemsGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr 1fr;\n`;\n\n// Single Grid Item (for home page)\nexport const ItemStyles = styled.div`\n  text-align: center;\n  position: relative;\n  img {\n    height: auto;\n    font-size: 0;\n  }\n  p {\n    top: 0;\n    transform: rotate(-2deg) translateY(-10px);\n    position: absolute;\n    width: 100%;\n    left: 0;\n    margin: 0;\n    font-size: 2rem;\n    font-size: clamp(12px, 5vw, 20px);\n  }\n  .mark {\n    display: inline;\n  }\n  @keyframes shine {\n    from {\n      background-position: 200%;\n    }\n    to {\n      background-position: -40px;\n    }\n  }\n  img.loading {\n    --shine: white;\n    --background: var(--grey);\n    background-image: linear-gradient(\n      90deg,\n      var(--background) 0px,\n      var(--shine) 40px,\n      var(--background) 80px\n    );\n    background-size: 500px;\n    animation: shine 1s infinite linear;\n  }\n`;\n","import React from 'react';\r\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\r\n\r\nexport default function LoadingGrid({ count }) {\r\n  return (\r\n    <ItemsGrid>\r\n      {Array.from({ length: count }, (_, i) => (\r\n        <ItemStyles>\r\n          <p>\r\n            <span className=\"mark\">Loading...</span>\r\n          </p>\r\n          <img\r\n            src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=\"\r\n            className=\"loading\"\r\n            alt=\"Loading\"\r\n            width=\"500\"\r\n            height=\"400\"\r\n          />\r\n        </ItemStyles>\r\n      ))}\r\n    </ItemsGrid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\r\n\r\nexport default function ItemGrid({ item }) {\r\n  return (\r\n    <ItemsGrid>\r\n      {item.map((items) => (\r\n        <ItemStyles>\r\n          <p>\r\n            <span className=\"mark\">{items.name}</span>\r\n          </p>\r\n          <img\r\n            width=\"500\"\r\n            height=\"400\"\r\n            src={`${items.image.asset.url}?w=500&h=400&fit=crop`}\r\n            alt={items.name}\r\n            style={{\r\n              background: `url(${items.image.asset.metadata.lqip})`,\r\n              backgroundSize: 'cover'\r\n            }}\r\n          />\r\n        </ItemStyles>\r\n      ))}\r\n    </ItemsGrid>\r\n  );\r\n}\r\n","import React from 'react';\nimport useLatestData from '../utils/useLatestData';\nimport { HomePageGrid } from '../styles/Grids';\nimport LoadingGrid from '../components/LoadingGrid';\nimport ItemGrid from '../components/ItemGrid';\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters On</span>\n      </h2>\n      <p>Standing by, ready to slice you up!</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && <p>No one is working now!</p>}\n      {slicemasters?.length && <ItemGrid item={slicemasters} />}\n    </div>\n  );\n}\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Hot Now!</span>\n      </h2>\n      <p>Come on by, buy the slice!</p>\n\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>Nothin' in the Case</p>}\n      {hotSlices?.length &&  <ItemGrid item={hotSlices} />}\n    </div>\n  );\n}\n\nexport default function HomePage() {\n  const { slicemasters, hotSlices } = useLatestData();\n  return (\n    <div className=\"center\">\n      <h1>The Best Pizza Downtown!</h1>\n      <p>Open 11am to 11pm Every Single Day</p>\n      <HomePageGrid>\n        <CurrentlySlicing slicemasters={slicemasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGrid>\n    </div>\n  );\n}\n"],"sourceRoot":""}